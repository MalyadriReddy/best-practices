//
//  SolutionsViewController.swift
//  CODIUM
//
//  Created by Malyadri on 15/12/19.
//  Copyright (c) 2019 codium. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SolutionsViewControllerInterface: class {
  func displaySolutionResult(viewModel: Solutions.ViewModel)
}

class SolutionsViewController: UIViewController, SolutionsViewControllerInterface {
  var interactor: SolutionsInteractorInterface!
  var router: SolutionsRouterInterface!
  
  //UI Outlets
  @IBOutlet weak var inputBackGroundViewConstraint: NSLayoutConstraint!
  @IBOutlet weak var yearTextField: UITextField!
  @IBOutlet weak var resultLabel: UILabel!
  @IBOutlet weak var inputBackGroundView: UIView!
  
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib() {
    super.awakeFromNib()
    configure(viewController: self)
  }
  
  // MARK: - Configuration
  
  private func configure(viewController: SolutionsViewController) {
    let router = SolutionsRouter()
    router.viewController = viewController
    
    let presenter = SolutionsPresenter()
    presenter.viewController = viewController
    
    let interactor = SolutionsInteractor()
    interactor.presenter = presenter
    
    viewController.interactor = interactor
    viewController.router = router
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    initialSetUp()
    
  }
  
  private func initialSetUp() {
    inputBackGroundView.layer.cornerRadius = 10
    switch interactor.flow {
    case .fizzBuzz:
      self.title = "FizzBuzz(1 to 100)"
      inputBackGroundView.isHidden = true
      getResponseForValues(value: 100)
    case .leapYear:
      self.title = "Leap Year"
      seupUI()
        resultLabel.textAlignment = .center
    case .leftTriangle:
      self.title = "Left Triangle Pattern"
     seupUI()
        resultLabel.textAlignment = .left
    case .rightTriangle:
      self.title = "Right Triangle Pattern"
      seupUI()
      resultLabel.textAlignment = .right
    case .invertV:
      self.title = "Invert V Pattern"
      seupUI()
    case .xPattern:
      self.title = "X Pattern"
      seupUI()
    case .diamondPattern:
      self.title = "Diamond Pattern"
      seupUI()
    case .lettersPattern:
      self.title = "Letters Pattern"
      seupUI()
    case .differenceBtwElseAndFinally:
      self.title = "Else and Finally"
    case .primeNumbers:
      self.title = "Prime Numbers"
      seupUI()
    }
  }
  
  private func seupUI() {
    inputBackGroundView.isHidden = false
    yearTextField.placeholder = "Enter Value Range"
    yearTextField.isUserInteractionEnabled = true
    inputBackGroundViewConstraint.constant = 91
  }
  
  private func getResponseForValues(value: Int) {
    interactor.getSolutionsResponse(request: Solutions.Request(value: value))
  }


  
  @IBAction func checkYearOnClick(_ sender: Any) {
    let value: String = yearTextField.text ?? "0"
    getResponseForValues(value: Int(value) ?? 0)
  }
  
  func displaySolutionResult(viewModel: Solutions.ViewModel) {
    resultLabel.text = viewModel.result
  }

}
