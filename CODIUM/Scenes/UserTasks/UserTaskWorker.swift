//
//  UserTaskWorker.swift
//  CODIUM
//
//  Created by Malyadri on 13/12/19.
//  Copyright (c) 2019 codium. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserTaskProtocol {
  func fetchTaskListfromDatabase(completion: @escaping (Result<UserTaskList, DataError>) -> Void)
  func storeTask(taskDescription: String, completion: @escaping (Result<UserTaskList, DataError>) -> Void)
  func deleteTask(taskDescription taskData: String, completion: @escaping (Result<UserTaskList, DataError>) -> Void)
}

class UserTaskWorker {
 
  var store: UserTaskProtocol
  
  init(store: UserTaskProtocol) {
    self.store = store
  }
  
  func fetchTaskListfromDatabase(completion: @escaping (Result<UserTaskList, DataError>) -> Void) {
    store.fetchTaskListfromDatabase(completion: completion)
  }
  
  func storeTask(taskDescription: String, completion: @escaping (Result<UserTaskList, DataError>) -> Void) {
    store.storeTask(taskDescription: taskDescription, completion: completion)
  }
  
  func deleteTask(taskDescription: String, completion: @escaping (Result<UserTaskList, DataError>) -> Void) {
    store.deleteTask(taskDescription: taskDescription, completion: completion)
  }

}
